// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication10.Data;

namespace WebApplication10.Migrations
{
    [DbContext(typeof(AppDbcontext))]
    partial class AppDbcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication10.Models.Account", b =>
                {
                    b.Property<int>("account_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<float?>("balance")
                        .IsRequired()
                        .HasColumnType("real");

                    b.HasKey("account_id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Account");
                });

            modelBuilder.Entity("WebApplication10.Models.Equb_order", b =>
                {
                    b.Property<int>("equb_order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("equb_id")
                        .HasColumnType("int");

                    b.Property<int>("order_no")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("win_date")
                        .HasColumnType("datetime2");

                    b.HasKey("equb_order_id");

                    b.HasIndex("equb_id");

                    b.ToTable("equb_order");
                });

            modelBuilder.Entity("WebApplication10.Models.Transact", b =>
                {
                    b.Property<int>("trans_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ac_id")
                        .HasColumnType("int");

                    b.Property<int?>("account_id")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<float?>("amount")
                        .IsRequired()
                        .HasColumnType("real");

                    b.Property<string>("id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("time")
                        .HasColumnType("datetime2");

                    b.Property<string>("trans_to")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("trans_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("trans_id");

                    b.HasIndex("account_id");

                    b.ToTable("Transact");
                });

            modelBuilder.Entity("WebApplication10.Models.equb_detail", b =>
                {
                    b.Property<int>("equb_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("amount")
                        .IsRequired()
                        .HasColumnType("real");

                    b.Property<string>("cycle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("duration")
                        .HasColumnType("int");

                    b.Property<DateTime>("end_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("equb_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("equb_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("number_of_users")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("start_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("equb_id");

                    b.ToTable("equb_detail");
                });

            modelBuilder.Entity("WebApplication10.Models.Equb_order", b =>
                {
                    b.HasOne("WebApplication10.Models.equb_detail", "Equb_detail")
                        .WithMany()
                        .HasForeignKey("equb_id");
                });

            modelBuilder.Entity("WebApplication10.Models.Transact", b =>
                {
                    b.HasOne("WebApplication10.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("account_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
